<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MongoDB 阶段考试总结</title>
      <link href="/2022/04/18/MongoDB%20%E9%98%B6%E6%AE%B5%E8%80%83%E8%AF%95%E6%80%BB%E7%BB%93/"/>
      <url>/2022/04/18/MongoDB%20%E9%98%B6%E6%AE%B5%E8%80%83%E8%AF%95%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="MongoDB-阶段考试总结"><a href="#MongoDB-阶段考试总结" class="headerlink" title="MongoDB 阶段考试总结"></a>MongoDB 阶段考试总结</h1><p><a href="https://pan.baidu.com/s/1VWlYDmwwnBdc6mvVy_4H-w?pwd=eq3v">数据集下载</a></p><h2 id="student-集合"><a href="#student-集合" class="headerlink" title="student 集合"></a>student 集合</h2><ol><li>根据下面给出的文档，用 MongoDB 设计出 student 集合</li></ol><p><img src="https://s1.ax1x.com/2022/04/18/LaHI5n.png" alt="简答题"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.student.insert(&#123;&quot;name&quot;:&quot;zhangsan&quot;,&quot;score&quot;:&#123;&quot;English&quot;:<span class="number">69</span>,&quot;Math&quot;:<span class="number">86</span>,&quot;Computer&quot;:<span class="number">77</span>&#125;&#125;)</span><br><span class="line">db.student.insert(&#123;&quot;name&quot;:&quot;list&quot;,&quot;score&quot;:&#123;&quot;English&quot;:<span class="number">55</span>,&quot;Math&quot;:<span class="number">100</span>,&quot;Computer&quot;:<span class="number">88</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><ol start="2"><li>输出所有学生的信息</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.student.find(&#123;&#125;)</span><br></pre></td></tr></table></figure><ol start="3"><li>查询zhangsan的所有成绩（只显示score列）</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.student.find(&#123;&quot;name&quot;:&quot;zhangsan&quot;&#125;,&#123;&quot;score&quot;:<span class="number">1</span>,&quot;_id&quot;:<span class="number">0</span>&#125;)</span><br><span class="line"># 注意：find 的第二个参数</span><br></pre></td></tr></table></figure><ol start="4"><li><strong>修改 lisi 的 Math 成绩， 改为95</strong></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.student.update(&#123;&quot;name&quot;:&quot;list&quot;&#125;,&#123;&quot;$set&quot;:&#123;&quot;score.Math&quot;:<span class="number">95</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><ol start="5"><li>根据上面已经设计出的 student 集合， 用 MongoDB 的Python 客户端编程</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pymongo <span class="keyword">import</span> MongoClient</span><br><span class="line">client = MongoClient()</span><br><span class="line">db = client[<span class="string">&#x27;student&#x27;</span>]</span><br><span class="line">db.student,insert_one(&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;scofield&quot;</span>,<span class="string">&quot;score&quot;</span>:&#123;<span class="string">&quot;English&quot;</span>:<span class="number">45</span>,<span class="string">&quot;Math&quot;</span>:<span class="number">89</span>,<span class="string">&quot;Computer&quot;</span>:<span class="number">100</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><ol start="6"><li>用MongoDB的Python客户端编程，获取scofield的所有成绩成绩信息（只显示score列)</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">m = db.student.find(&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;scofield&quot;</span>&#125;,&#123;<span class="string">&quot;_id&quot;</span>:<span class="number">0</span>,<span class="string">&quot;score&quot;</span>:<span class="number">1</span>&#125;)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> m:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><h2 id="user-集合"><a href="#user-集合" class="headerlink" title="user 集合"></a>user 集合</h2><ol start="7"><li><p>下载资料区中的 MongoDB 数据代码.txt , 在 MongoDB 中运行生成数据。请编程求解列出的问题。第7-25题使用 user 集合。</p><p>查询 age 等于 26岁 的记录。</p></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.users.find(&#123;&quot;age&quot;:<span class="number">26</span>&#125;)</span><br></pre></td></tr></table></figure><ol start="8"><li>查询 age &gt; 25 的记录</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.users.find(&#123;&quot;age&quot;:&#123;&quot;$gt&quot;:<span class="number">25</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><ol start="9"><li>查询 age &gt;&#x3D; 25 或者 age &lt;&#x3D; 26</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.users.find(&#123;&quot;$and&quot;:</span><br><span class="line">              [&#123;&quot;age&quot;:&#123;&quot;$gte&quot;:<span class="number">25</span>&#125;&#125;,</span><br><span class="line">               &#123;&quot;age&quot;:&#123;&quot;$lte&quot;:<span class="number">26</span>&#125;&#125;]</span><br><span class="line">              &#125;)</span><br></pre></td></tr></table></figure><ol start="10"><li><p>查询age&#x3D;25或者age&#x3D;26的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.users.find(&#123;&quot;$or&quot;:</span><br><span class="line">              [&#123;&quot;age&quot;:<span class="number">25</span>&#125;,</span><br><span class="line">               &#123;&quot;age&quot;:<span class="number">26</span>&#125;]</span><br><span class="line">              &#125;)</span><br></pre></td></tr></table></figure></li><li><p>查询name中包含 <code>u</code>的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.users.find(&#123;&quot;name&quot;:<span class="operator">/</span>u<span class="operator">/</span>&#125;)</span><br></pre></td></tr></table></figure></li><li><p>查询存在评论(comments)的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.users.find(&#123;&quot;comments&quot;:&#123;&quot;$exists&quot;:<span class="literal">true</span>&#125;&#125;)</span><br></pre></td></tr></table></figure></li><li><p>查询name中以<code>to</code>开头的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.users.find(&#123;&quot;name&quot;:<span class="operator">/</span><span class="operator">^</span><span class="keyword">to</span><span class="operator">/</span>&#125;)</span><br></pre></td></tr></table></figure></li><li><p>查询指定列name、age数据（只显示name、age的数据）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.users.find(&#123;&#125;,&#123;&quot;name&quot;:<span class="number">1</span>,&quot;age&quot;:<span class="number">1</span>,&quot;_id&quot;:<span class="number">0</span>&#125;)</span><br></pre></td></tr></table></figure></li><li><p>查询指定列name、age数据, age &gt; 25</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.users.find(&#123;&quot;age&quot;:&#123;&quot;$gt&quot;:<span class="number">25</span>&#125;&#125;,&#123;&quot;name&quot;:<span class="number">1</span>,&quot;age&quot;:<span class="number">1</span>,&quot;_id&quot;:<span class="number">0</span>&#125;)</span><br></pre></td></tr></table></figure></li><li><p>按照age降序排序</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.users.find(&#123;&#125;).sort(&#123;&quot;age&quot;:<span class="number">-1</span>&#125;)</span><br></pre></td></tr></table></figure></li><li><p>查询前3条数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.users.find(&#123;&#125;).limit(<span class="number">3</span>)</span><br></pre></td></tr></table></figure></li><li><p>查询3条以后的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.users.find(&#123;&#125;).<span class="keyword">skip</span>(<span class="number">3</span>)</span><br></pre></td></tr></table></figure></li><li><p>查询第4、5、6条数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.users.find(&#123;&#125;).<span class="keyword">skip</span>(<span class="number">3</span>).limit(<span class="number">3</span>)</span><br></pre></td></tr></table></figure></li><li><p>查询favorites.movies中，有头号玩家和肖生克的救赎的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.users.find(&#123;&quot;favorites.movies&quot;:&#123;&quot;$all&quot;:[&quot;肖生克的救赎&quot;,&quot;头号玩家&quot;]&#125;&#125;)</span><br></pre></td></tr></table></figure></li><li><p>查询name存在bu字符，并且 age&#x3D;25或者26</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">db.users.find(&#123;&quot;$and&quot;:</span><br><span class="line">              [&#123;&quot;name&quot;:<span class="operator">/</span>bu<span class="operator">/</span>&#125;,</span><br><span class="line">               &#123;&quot;$or&quot;:</span><br><span class="line">               [&#123;&quot;age&quot;:<span class="number">25</span>&#125;,</span><br><span class="line">                &#123;&quot;age&quot;:<span class="number">26</span>&#125;]</span><br><span class="line">               &#125;]</span><br><span class="line">              &#125;)</span><br></pre></td></tr></table></figure></li><li><p>请写出name去重的代码。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.users.distinct(&quot;name&quot;);</span><br></pre></td></tr></table></figure></li><li><p><strong>查询所有name&#x3D;xiaobu的comments前三条数据</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.users.find(&#123;&quot;name&quot;:&quot;xiaobu&quot;&#125;,&#123;&quot;comments&quot;:&#123;&quot;$slice&quot;:[<span class="number">0</span>,<span class="number">3</span>]&#125;&#125;)</span><br></pre></td></tr></table></figure></li><li><p><strong>查询被userld&#x3D;101或者userld&#x3D;001评论过的数据</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.users.find(&#123;&quot;comments.userId&quot;:&#123;&quot;$in&quot;:[&quot;101&quot;,&quot;001&quot;]&#125;&#125;)</span><br></pre></td></tr></table></figure></li><li><p>查询userld&#x3D;101,评语为”评论1”的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.users.find(&#123;&quot;comments.userId&quot;:&quot;101&quot;,&quot;comments.content&quot;:&quot;评论1&quot;&#125;)</span><br></pre></td></tr></table></figure><h2 id="grade-集合"><a href="#grade-集合" class="headerlink" title="grade 集合"></a>grade 集合</h2></li><li><p><strong>删除</strong>所有17岁的学生。</p></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.grade.remove(&#123;&quot;age&quot;:<span class="number">17</span>&#125;)</span><br></pre></td></tr></table></figure><ol start="27"><li><p><strong>修改</strong>名为zhangsan5的学生，年龄为20岁，兴趣爱好为”dance” , “drawing”</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.grade.update(&#123;&quot;name&quot;:&quot;zhangsan5&quot;&#125;,&#123;&quot;$set&quot;:&#123;&quot;age&quot;:<span class="number">20</span>,&quot;hobby&quot;:[&quot;dance&quot;,&quot;drawing&quot;]&#125;&#125;)</span><br></pre></td></tr></table></figure></li><li><p><strong>追加</strong>zhangsan5学生兴趣爱好”sing”</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.grade.update(&#123;&quot;name&quot;:&quot;zhangsan5&quot;&#125;,&#123;&quot;$push&quot;:&#123;&quot;hobby&quot;:&quot;sing&quot;&#125;&#125;)</span><br></pre></td></tr></table></figure></li><li><p>所有学生的年龄都增加一岁</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.grade.update(&#123;&#125;,&#123;&quot;$inc&quot;:&#123;&quot;age&quot;:<span class="number">1</span>&#125;&#125;)</span><br></pre></td></tr></table></figure></li><li><p><strong>删除zhangsan5学生的hobby数组中的头元素 (删除第一个 pop -1)</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.grade.update(&#123;&quot;name&quot;:&quot;zhangsan5&quot;&#125;,&#123;&quot;$pop&quot;:&#123;&quot;hobby&quot;:<span class="number">-1</span>&#125;&#125;)</span><br></pre></td></tr></table></figure></li><li><p>根据年龄分组，并统计人数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.grade.aggregate([</span><br><span class="line">    &#123;&quot;$group&quot;:&#123;&quot;_id&quot;:&quot;$age&quot;,</span><br><span class="line">    &quot;人数&quot;:&#123;&quot;$sum&quot;:<span class="number">1</span>&#125;&#125;&#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure></li><li><p><strong>根据年龄分组，并统计人数，过滤人数大于1的学生</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">db.grade.aggregate([</span><br><span class="line">    &#123;&quot;$group&quot;:&#123;&quot;_id&quot;:&quot;$age&quot;,</span><br><span class="line">                &quot;人数&quot;:&#123;&quot;$sum&quot;:<span class="number">1</span>&#125;&#125;&#125;,</span><br><span class="line">    &#123;&quot;$match&quot;:&#123;&quot;人数&quot;:&#123;&quot;$gt&quot;:<span class="number">1</span>&#125;&#125;&#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure></li><li><p><strong>统计每名学生在考试中的总分。</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">db.grade.aggregate([</span><br><span class="line">    &#123;&quot;$group&quot;:&#123;&quot;_id&quot;:&quot;$name&quot;,</span><br><span class="line">    &quot;总分&quot;:&#123;&quot;$sum&quot;:&#123;&quot;$sum&quot;:[&quot;$score.chinese&quot;,&quot;$score.math&quot;,&quot;$score.english&quot;]&#125;&#125;</span><br><span class="line">    &#125;&#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure></li><li><p><strong>统计每名男生在考试中的总分，总分降序。（性别О代表男生，1代表女生)</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">db.grade.aggregate([</span><br><span class="line">    &#123;&quot;$match&quot;:&#123;&quot;sex&quot;:<span class="number">0</span>&#125;&#125;,</span><br><span class="line">    &#123;&quot;$group&quot;:&#123;&quot;_id&quot;:&quot;$name&quot;,</span><br><span class="line">    &quot;总分&quot;:&#123;&quot;$sum&quot;:&#123;&quot;$sum&quot;:[&quot;$score.chinese&quot;,&quot;$score.math&quot;,&quot;$score.english&quot;]&#125;&#125;&#125;&#125;,&#123;&quot;$sort&quot;:&#123;&quot;总分&quot;:<span class="number">1</span>&#125;&#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure><h2 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h2></li><li><p>MongoDB在A:{B,C}上建立索引，查询A:{B,C}和A:{C,B}都会使用索引吗?</p></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">不会，只会在A:&#123;B,C&#125;上使用索引。</span><br></pre></td></tr></table></figure><ol start="36"><li>在MongoDB中什么是索引?为什么需要添加索引?<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MongoDB中的索引其实类似于关系型数据库,是为了解决数据搜索效率低下引入的一种特殊的数据结构.</span><br><span class="line">没有索引时，如果我们要在整个集合中查找符合条件的文档，就只能一个文档一个文档地去扫描（即“全表扫描”）。当集合非常大时，这总全表扫描的方式就会变得十分低效。而有了索引之后，我们就不需要再使用全表扫描这种低效的方式来查询文档！而是如同翻书先查目录一样，先查索引再根据索引去查找文档！</span><br></pre></td></tr></table></figure></li><li>什么是 NoSQL数据库? NoSQL和 RDBMS有什么区别?在哪些情况下使用和不使用NoSQL数据库?<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">NoSQL是非关系型数据库，NoSQL <span class="operator">=</span> <span class="keyword">Not</span> <span class="keyword">Only</span> <span class="keyword">SQL</span>。</span><br><span class="line">关系型数据库采用的结构化的数据，NoSQL采用的是键值对的方式存储数据。</span><br><span class="line">在处理非结构化<span class="operator">/</span>半结构化的大数据时，在水平方向上进行扩展时;随时应对动态增加的数据项时可以优先考虑使用NoSQL数据库。在考虑数据库的成熟度;支持;分析和商业智能;管理及专业性等问题时，应优先考虑关系型数据库。</span><br></pre></td></tr></table></figure></li><li>在 MongoDB中，什么是集合?什么是文档?<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">多个键值对的有序存放在一起就是文档。</span><br><span class="line">集合就是一组文档。</span><br></pre></td></tr></table></figure></li></ol><h2 id="更多练习"><a href="#更多练习" class="headerlink" title="更多练习"></a>更多练习</h2><p><a href="https://www.cnblogs.com/py2019/p/11991883.html">练习一</a></p><p><a href="https://blog.csdn.net/dylanlgq/article/details/80013028">练习二</a></p>]]></content>
      
      
      <categories>
          
          <category> MongoDB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯常考知识点——递归与递推</title>
      <link href="/2022/04/17/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%B8%B8%E8%80%83%E7%9F%A5%E8%AF%86%E7%82%B9%E2%80%94%E2%80%94%E9%80%92%E5%BD%92%E4%B8%8E%E9%80%92%E6%8E%A8/"/>
      <url>/2022/04/17/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%B8%B8%E8%80%83%E7%9F%A5%E8%AF%86%E7%82%B9%E2%80%94%E2%80%94%E9%80%92%E5%BD%92%E4%B8%8E%E9%80%92%E6%8E%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="蓝桥杯常考知识点——递归与递推"><a href="#蓝桥杯常考知识点——递归与递推" class="headerlink" title="蓝桥杯常考知识点——递归与递推"></a>蓝桥杯常考知识点——递归与递推</h1><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><p><code>自己调用自己</code> 则是<strong>递归</strong></p><p>所有的递归都可以转化为一颗<code>递归搜索树</code></p><h3 id="递归实现指数型枚举"><a href="#递归实现指数型枚举" class="headerlink" title="递归实现指数型枚举"></a>递归实现指数型枚举</h3><p>从 1∼n1∼n 这 nn 个整数中随机选取任意多个，输出所有可能的选择方案。</p><p><strong>输入格式</strong></p><p>输入一个整数 nn。</p><p><strong>输出格式</strong></p><p>每行输出一种方案。</p><p>同一行内的数必须升序排列，相邻两个数用恰好 11 个空格隔开。</p><p>对于没有选任何数的方案，输出空行。</p><p>本题有自定义校验器（SPJ），各行（不同方案）之间的顺序任意。</p><p><strong>数据范围</strong></p><p>1≤n≤151≤n≤15</p><p><strong>输入样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p><strong>输出样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">2</span><br><span class="line">2 3</span><br><span class="line">1</span><br><span class="line">1 3</span><br><span class="line">1 2</span><br><span class="line">1 2 3</span><br></pre></td></tr></table></figure><hr><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">dfs</span>(<span class="params">u</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(u&gt;n):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> ls[i]==<span class="number">1</span>:</span><br><span class="line">                <span class="built_in">print</span>(i,end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>()</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    ls[u]=<span class="number">2</span></span><br><span class="line">    dfs(u+<span class="number">1</span>)</span><br><span class="line">    ls[u]=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">    ls[u]=<span class="number">1</span></span><br><span class="line">    dfs(u+<span class="number">1</span>)</span><br><span class="line">    ls[u]=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">ls = [<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>)]</span><br><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">dfs(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><hr><h3 id="递归实现排列型枚举"><a href="#递归实现排列型枚举" class="headerlink" title="递归实现排列型枚举"></a>递归实现排列型枚举</h3><p>把 1∼n1∼n 这 nn 个整数排成一行后随机打乱顺序，输出所有可能的次序。</p><p><strong>输入格式</strong></p><p>一个整数 nn。</p><p><strong>输出格式</strong></p><p>按照从小到大的顺序输出所有方案，每行 11 个。</p><p>首先，同一行相邻两个数用一个空格隔开。</p><p>其次，对于两个不同的行，对应下标的数一一比较，字典序较小的排在前面。</p><p><strong>数据范围</strong></p><p>1≤n≤91≤n≤9</p><p><strong>输入样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p><strong>输出样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1 2 3</span><br><span class="line">1 3 2</span><br><span class="line">2 1 3</span><br><span class="line">2 3 1</span><br><span class="line">3 1 2</span><br><span class="line">3 2 1</span><br></pre></td></tr></table></figure><hr><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">st=[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">used = [<span class="literal">False</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dfs</span>(<span class="params">u</span>):</span><br><span class="line">    <span class="keyword">if</span> u==n:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="built_in">print</span>(st[i],end=<span class="string">&quot; &quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>()</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> used[i]:</span><br><span class="line">            st[u]=i+<span class="number">1</span></span><br><span class="line">            used[i]=<span class="literal">True</span></span><br><span class="line">            dfs(u+<span class="number">1</span>)</span><br><span class="line">            used[i]=<span class="literal">False</span></span><br><span class="line">            st[u]=<span class="number">0</span></span><br><span class="line">dfs(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h3 id="递归实现组合型枚举"><a href="#递归实现组合型枚举" class="headerlink" title="递归实现组合型枚举"></a>递归实现组合型枚举</h3><p>从 1∼n1∼n 这 nn 个整数中随机选出 mm 个，输出所有可能的选择方案。</p><p><strong>输入格式</strong></p><p>两个整数 n,mn,m ,在同一行用空格隔开。</p><p><strong>输出格式</strong></p><p>按照从小到大的顺序输出所有方案，每行 11 个。</p><p>首先，同一行内的数升序排列，相邻两个数用一个空格隔开。</p><p>其次，对于两个不同的行，对应下标的数一一比较，字典序较小的排在前面（例如 <code>1 3 5 7</code> 排在 <code>1 3 6 8</code> 前面）。</p><p><strong>数据范围</strong></p><p>n&gt;0n&gt;0 ,<br>0≤m≤n0≤m≤n ,<br>n+(n−m)≤25n+(n−m)≤25</p><p><strong>输入样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 3</span><br></pre></td></tr></table></figure><p><strong>输出样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1 2 3 </span><br><span class="line">1 2 4 </span><br><span class="line">1 2 5 </span><br><span class="line">1 3 4 </span><br><span class="line">1 3 5 </span><br><span class="line">1 4 5 </span><br><span class="line">2 3 4 </span><br><span class="line">2 3 5 </span><br><span class="line">2 4 5 </span><br><span class="line">3 4 5 </span><br></pre></td></tr></table></figure><hr><h4 id="方法一：全排列筛选"><a href="#方法一：全排列筛选" class="headerlink" title="方法一：全排列筛选"></a>方法一：全排列筛选</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">n,m=<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split()))</span><br><span class="line">used=[<span class="literal">False</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)]  <span class="comment">#这个数字有没有被用过  n+1防止数据溢出</span></span><br><span class="line">st=[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m+<span class="number">1</span>)]        <span class="comment">#每个萝卜的坑          m+1防止数据溢出</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dfs</span>(<span class="params">u</span>):</span><br><span class="line">    <span class="keyword">if</span> u==m:                      <span class="comment">#边界：萝卜已经全部种好，取出看是多少就行</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">            <span class="built_in">print</span>(st[i],end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>()</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> (u==<span class="number">0</span> <span class="keyword">or</span> i&gt;st[u-<span class="number">1</span>]) <span class="keyword">and</span> used[i]==<span class="literal">False</span>:  </span><br><span class="line">            st[u]=i                                 </span><br><span class="line">            used[i]=<span class="literal">True</span></span><br><span class="line">            dfs(u+<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">            used[i]=<span class="literal">False</span></span><br><span class="line"></span><br><span class="line">dfs(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h4 id="方法二：start"><a href="#方法二：start" class="headerlink" title="方法二：start"></a>方法二：start</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">n,m=list(map(int,input().split()))</span><br><span class="line">state=[0 for i in range(m)]</span><br><span class="line"></span><br><span class="line">def dfs(u,start):</span><br><span class="line">    if u==m:</span><br><span class="line">        for i in range(m):</span><br><span class="line">            print(state[i],end=&#x27; &#x27;)</span><br><span class="line">        print()</span><br><span class="line">        return</span><br><span class="line"></span><br><span class="line">    for i in range(start,n+1):</span><br><span class="line">        state[u]=i</span><br><span class="line">        dfs(u+1,i+1)</span><br><span class="line"></span><br><span class="line">dfs(0,1)</span><br></pre></td></tr></table></figure><hr><h3 id="带分数"><a href="#带分数" class="headerlink" title="带分数"></a>带分数</h3><p>100100 可以表示为带分数的形式：100&#x3D;3+69258714100&#x3D;3+69258714</p><p>还可以表示为：100&#x3D;82+3546197100&#x3D;82+3546197</p><p>注意特征：带分数中，数字 1∼91∼9 分别出现且只出现一次（不包含 00）。</p><p>类似这样的带分数，100100 有 1111 种表示法。</p><p><strong>输入格式</strong></p><p>一个正整数。</p><p><strong>输出格式</strong></p><p>输出输入数字用数码 1∼91∼9 不重复不遗漏地组成带分数表示的全部种数。</p><p><strong>数据范围</strong></p><p>1≤N&lt;1061≤N&lt;106</p><p><strong>输入样例1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">100</span><br></pre></td></tr></table></figure><p><strong>输出样例1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11</span><br></pre></td></tr></table></figure><p><strong>输入样例2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">105</span><br></pre></td></tr></table></figure><p><strong>输出样例2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><hr><blockquote><p>注意：复制列表必须用backup&#x3D;st[:],不能用backup&#x3D;[x for x in st]不然会超时</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">st = [<span class="literal">False</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]</span><br><span class="line">ans = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check</span>(<span class="params">a,c</span>):</span><br><span class="line">    <span class="keyword">global</span> n</span><br><span class="line">    b = n*c -a*c</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> a <span class="keyword">or</span> <span class="keyword">not</span> b <span class="keyword">or</span> <span class="keyword">not</span> c:     <span class="comment"># 如果a,b,c为0</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    backup = st[:]</span><br><span class="line">    <span class="keyword">while</span> b:                        <span class="comment"># 看a,b,c中是不是1~9都出现过了</span></span><br><span class="line">        x = b%<span class="number">10</span></span><br><span class="line">        b //= <span class="number">10</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> x <span class="keyword">or</span> backup[x]:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        backup[x] = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> backup[i]:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dfs_c</span>(<span class="params">u,a,c</span>):</span><br><span class="line">    <span class="keyword">global</span> ans</span><br><span class="line">    <span class="keyword">if</span> u&gt;=<span class="number">10</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">if</span> check(a,c):</span><br><span class="line">        ans += <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> st[i]:</span><br><span class="line">            st[i] = <span class="literal">True</span></span><br><span class="line">            dfs_c(u+<span class="number">1</span>,a,c*<span class="number">10</span>+i)</span><br><span class="line">            st[i] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dfs_a</span>(<span class="params">u,a</span>):</span><br><span class="line">    <span class="keyword">if</span> a&gt;=n:        <span class="comment"># 剪枝</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">if</span> a:</span><br><span class="line">        dfs_c(u,a,<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> st[i]:</span><br><span class="line">            st[i] = <span class="literal">True</span></span><br><span class="line">            dfs_a(u+<span class="number">1</span>,a*<span class="number">10</span>+i)</span><br><span class="line">            st[i] = <span class="literal">False</span></span><br><span class="line">dfs_a(<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(ans)</span><br></pre></td></tr></table></figure><h2 id="递推"><a href="#递推" class="headerlink" title="递推"></a>递推</h2><h3 id="简单斐波那契"><a href="#简单斐波那契" class="headerlink" title="简单斐波那契"></a>简单斐波那契</h3><p>以下数列 <code>0 1 1 2 3 5 8 13 21 ...</code> 被称为斐波纳契数列。</p><p>这个数列从第 33 项开始，每一项都等于前两项之和。</p><p>输入一个整数 NN，请你输出这个序列的前 NN 项。</p><p><strong>输入格式</strong></p><p>一个整数 NN。</p><p><strong>输出格式</strong></p><p>在一行中输出斐波那契数列的前 NN 项，数字之间用空格隔开。</p><p><strong>数据范围</strong></p><p>0&lt;N&lt;460&lt;N&lt;46</p><p><strong>输入样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><p><strong>输出样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 1 1 2 3</span><br></pre></td></tr></table></figure><hr><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">f=[<span class="number">0</span>,<span class="number">1</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,n):</span><br><span class="line">    f.append(f[i-<span class="number">1</span>]+f[i-<span class="number">2</span>])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">    <span class="built_in">print</span>(f[i],end=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure><hr><h3 id="费解的开关"><a href="#费解的开关" class="headerlink" title="费解的开关"></a>费解的开关</h3><p><a href="https://www.acwing.com/problem/content/97/">原题链接</a></p><p>下面这种状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">10111</span><br><span class="line">01101</span><br><span class="line">10111</span><br><span class="line">10000</span><br><span class="line">11011</span><br></pre></td></tr></table></figure><p>在改变了最左上角的灯的状态后将变成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">01111</span><br><span class="line">11101</span><br><span class="line">10111</span><br><span class="line">10000</span><br><span class="line">11011</span><br></pre></td></tr></table></figure><p>再改变它正中间的灯后状态将变成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">01111</span><br><span class="line">11001</span><br><span class="line">11001</span><br><span class="line">10100</span><br><span class="line">11011</span><br></pre></td></tr></table></figure><p>给定一些游戏的初始状态，编写程序判断游戏者是否可能在 66 步以内使所有的灯都变亮。</p><hr><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">mp = []</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">turn</span>(<span class="params">x, y</span>):</span><br><span class="line">    dirs = [(<span class="number">0</span>, <span class="number">0</span>), (-<span class="number">1</span>, <span class="number">0</span>), (<span class="number">0</span>, -<span class="number">1</span>), (<span class="number">1</span>, <span class="number">0</span>), (<span class="number">0</span>, <span class="number">1</span>)]   <span class="comment">#偏移量</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">        xn, yn = x + dirs[i][<span class="number">0</span>], y + dirs[i][<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> xn &lt; <span class="number">0</span> <span class="keyword">or</span> yn &lt; <span class="number">0</span> <span class="keyword">or</span> xn &gt;= <span class="number">5</span> <span class="keyword">or</span> yn &gt;= <span class="number">5</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        mp[<span class="number">5</span> * xn + yn] ^= <span class="number">1</span>        <span class="comment">#将0变1，1变0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> t:</span><br><span class="line">    res = <span class="number">10</span></span><br><span class="line">    mip = []</span><br><span class="line">    row = <span class="number">5</span></span><br><span class="line">    <span class="keyword">while</span> row:                      <span class="comment">#用for会出错</span></span><br><span class="line">        s = <span class="built_in">input</span>()</span><br><span class="line">        <span class="keyword">if</span> s == <span class="string">&quot;&quot;</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">            mip.append(<span class="built_in">int</span>(s[i]))</span><br><span class="line">        row -= <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> op <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">33</span>):         <span class="comment">#枚举第一行所有的情况</span></span><br><span class="line">        step = <span class="number">0</span></span><br><span class="line">        mp = mip[:]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">            <span class="keyword">if</span> op &gt;&gt; i &amp; <span class="number">1</span> == <span class="number">1</span>:</span><br><span class="line">                step += <span class="number">1</span></span><br><span class="line">                turn(<span class="number">0</span>, i)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">4</span>):       <span class="comment">#第2-4行操作</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">5</span>):</span><br><span class="line">                <span class="keyword">if</span> mp[i*<span class="number">5</span>+j] == <span class="number">0</span>:</span><br><span class="line">                    step += <span class="number">1</span></span><br><span class="line">                    turn(i + <span class="number">1</span>, j)</span><br><span class="line">        flag = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):          <span class="comment">#最后一行若有未亮灯，则此解法无解</span></span><br><span class="line">            <span class="keyword">if</span> mp[<span class="number">20</span>+i] == <span class="number">0</span>:</span><br><span class="line">                flag = <span class="literal">False</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag:</span><br><span class="line">            res = <span class="built_in">min</span>(res, step)</span><br><span class="line">    <span class="keyword">if</span> res &gt; <span class="number">6</span>:</span><br><span class="line">        <span class="built_in">print</span>(-<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(res)</span><br><span class="line">    t -= <span class="number">1</span></span><br></pre></td></tr></table></figure><hr><h3 id="飞行员兄弟"><a href="#飞行员兄弟" class="headerlink" title="飞行员兄弟"></a>飞行员兄弟</h3><p><a href="https://www.acwing.com/problem/content/118/">原题链接</a></p><p><strong>输入样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-+--</span><br><span class="line">----</span><br><span class="line">----</span><br><span class="line">-+--</span><br></pre></td></tr></table></figure><p><strong>输出样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">1 1</span><br><span class="line">1 3</span><br><span class="line">1 4</span><br><span class="line">4 1</span><br><span class="line">4 3</span><br><span class="line">4 4</span><br></pre></td></tr></table></figure><hr><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">s = []</span><br><span class="line">path = []</span><br><span class="line">res = []</span><br><span class="line">res2 = <span class="number">17</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):                  <span class="comment"># 输入数据</span></span><br><span class="line">    f = <span class="built_in">input</span>()</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">        s.append(f[j])</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">turn</span>(<span class="params">x</span>):                        </span><br><span class="line">    xn,yn = x//<span class="number">4</span>,x%<span class="number">4</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">        <span class="keyword">if</span> co[<span class="number">4</span>*xn + i] == <span class="string">&quot;+&quot;</span>:</span><br><span class="line">            co[<span class="number">4</span>*xn+i] = <span class="string">&quot;-&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            co[<span class="number">4</span>*xn+i] = <span class="string">&quot;+&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">        <span class="keyword">if</span> co[i*<span class="number">4</span>+yn] == <span class="string">&quot;+&quot;</span>:</span><br><span class="line">            co[i*<span class="number">4</span>+yn] = <span class="string">&quot;-&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            co[i*<span class="number">4</span>+yn] = <span class="string">&quot;+&quot;</span></span><br><span class="line">    <span class="keyword">if</span> co[<span class="number">4</span>*xn+yn] == <span class="string">&quot;+&quot;</span>:</span><br><span class="line">        co[<span class="number">4</span>*xn+yn] = <span class="string">&quot;-&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        co[<span class="number">4</span>*xn+yn] = <span class="string">&quot;+&quot;</span></span><br><span class="line"><span class="keyword">for</span> op <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>&lt;&lt;<span class="number">16</span>):             <span class="comment"># 模拟摁法</span></span><br><span class="line">    step = <span class="number">0</span></span><br><span class="line">    path = []</span><br><span class="line">    co = s[:]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):             </span><br><span class="line">        <span class="keyword">if</span> op &gt;&gt; i &amp; <span class="number">1</span>:</span><br><span class="line">            step += <span class="number">1</span></span><br><span class="line">            path.append(i)</span><br><span class="line">            turn(i)</span><br><span class="line">    flag = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> co:                    <span class="comment"># 看这种摁法符不符合输入</span></span><br><span class="line">        <span class="keyword">if</span> i == <span class="string">&quot;+&quot;</span>:</span><br><span class="line">            flag = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> flag:                        <span class="comment"># 看是不是摁的次数最少</span></span><br><span class="line">        <span class="keyword">if</span> step &lt; res2:</span><br><span class="line">            res2 = step</span><br><span class="line">            res = path[:]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res2)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> res:</span><br><span class="line">    xx,yy = i//<span class="number">4</span>+<span class="number">1</span>,i%<span class="number">4</span>+<span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(xx,yy)</span><br></pre></td></tr></table></figure><hr><h3 id="翻硬币"><a href="#翻硬币" class="headerlink" title="翻硬币"></a>翻硬币</h3><p><a href="https://www.acwing.com/problem/content/1210/">原题链接</a></p><p><strong>输入样例1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">**********</span><br><span class="line">o****o****</span><br></pre></td></tr></table></figure><p><strong>输出样例1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><p><strong>输入样例2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*o**o***o***</span><br><span class="line">*o***o**o***</span><br></pre></td></tr></table></figure><p>输出样例2：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><hr><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">list</span>(<span class="built_in">input</span>())</span><br><span class="line">b = <span class="built_in">list</span>(<span class="built_in">input</span>())</span><br><span class="line">step = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">turn</span>(<span class="params">i</span>):</span><br><span class="line">    <span class="keyword">if</span> a[i]==<span class="string">&quot;*&quot;</span>:</span><br><span class="line">        a[i]=<span class="string">&quot;o&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        a[i]=<span class="string">&quot;*&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)):</span><br><span class="line">    <span class="keyword">if</span> a[i]!=b[i]:</span><br><span class="line">        turn(i)</span><br><span class="line">        turn(i+<span class="number">1</span>)</span><br><span class="line">        step += <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(step)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 蓝桥杯常考知识点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 递归 </tag>
            
            <tag> 递推 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2022天梯赛训练-2</title>
      <link href="/2022/04/16/2022%E5%A4%A9%E6%A2%AF%E8%B5%9B%E8%AE%AD%E7%BB%83-2/"/>
      <url>/2022/04/16/2022%E5%A4%A9%E6%A2%AF%E8%B5%9B%E8%AE%AD%E7%BB%83-2/</url>
      
        <content type="html"><![CDATA[<h1 id="2022天梯赛训练-2"><a href="#2022天梯赛训练-2" class="headerlink" title="2022天梯赛训练-2"></a>2022天梯赛训练-2</h1><h2 id="7-7-彩虹瓶"><a href="#7-7-彩虹瓶" class="headerlink" title="7-7 彩虹瓶"></a>7-7 彩虹瓶</h2><h3 id="【题目】"><a href="#【题目】" class="headerlink" title="【题目】"></a>【题目】</h3><p><a href="https://pintia.cn/problem-sets/994805046380707840/problems/1111914599412858889">原题链接</a></p><p><img src="https://images.ptausercontent.com/5612216c-1cbd-4dba-b9da-4f653ad00c7b.JPG" alt="彩虹瓶"></p><hr><h3 id="【理解】"><a href="#【理解】" class="headerlink" title="【理解】"></a>【理解】</h3><p>一开始的想法是，模拟人工处理，每次拿到一种颜色，不是就把他push进栈，是就now ++，只判断栈头是否是需要的。</p><p>结果就🐔了</p><p>后来发现，<strong>正确</strong>的判断顺序是：如果当前拿到的数字不是now，就入栈，如果是now，now++，并且while</p><p>循环栈中的下一个元素是不是当前的now，最后如果栈中还有没用完的数字，则失败</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> *</span><br><span class="line">n,m,k = <span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split())</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(k):</span><br><span class="line">    q = deque()</span><br><span class="line">    now = <span class="number">1</span></span><br><span class="line">    ls = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split()))</span><br><span class="line">    flag = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ls:</span><br><span class="line">        <span class="keyword">if</span> i == now:</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> <span class="built_in">len</span>(q):</span><br><span class="line">                <span class="keyword">if</span> q[-<span class="number">1</span>] != now:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                now += <span class="number">1</span></span><br><span class="line">                q.pop()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            q.append(i)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(q) &gt; m:</span><br><span class="line">            flag = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> flag:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;NO&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> <span class="keyword">not</span> <span class="built_in">len</span>(q):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;YES&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;NO&quot;</span>)</span><br></pre></td></tr></table></figure><p>参考了学姐<strong>用列表模拟栈</strong>的代码，不要忘记列表有**pop()**方法噢</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">n,m,k = <span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split())</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(k):</span><br><span class="line">    tmp = []</span><br><span class="line">    now = []</span><br><span class="line">    index = <span class="number">1</span></span><br><span class="line">    flag = <span class="number">0</span></span><br><span class="line">    line = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split()))</span><br><span class="line">    <span class="keyword">for</span>  i <span class="keyword">in</span> line:</span><br><span class="line">        <span class="keyword">if</span> i == index:</span><br><span class="line">            now.append(i)</span><br><span class="line">            index += <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> <span class="built_in">len</span>(tmp) != <span class="number">0</span>:</span><br><span class="line">                tmp_top = tmp[-<span class="number">1</span>]</span><br><span class="line">                <span class="keyword">if</span> tmp_top != index:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                now.append(tmp_top)</span><br><span class="line">                index += <span class="number">1</span></span><br><span class="line">                tmp.pop()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tmp.append(i)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(tmp) &gt; m:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;NO&quot;</span>)</span><br><span class="line">            flag = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> flag == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> now[-<span class="number">1</span>] == n:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;YES&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;NO&quot;</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="7-8-包装机"><a href="#7-8-包装机" class="headerlink" title="7-8 包装机"></a>7-8 包装机</h2><h3 id="【题目】-1"><a href="#【题目】-1" class="headerlink" title="【题目】"></a>【题目】</h3><p><a href="https://pintia.cn/problem-sets/994805046380707840/problems/1386335159927652360">原题链接</a></p><p><img src="https://images.ptausercontent.com/40282bd3-1adb-43f9-9db7-6af4ae06d6c3.JPG" alt="图1 自动包装机的结构"></p><p><img src="https://images.ptausercontent.com/0092f601-031c-4b74-a7f1-d26846fe65a1.JPG" alt="图 2 顺序按下按钮 3、2、3、0、1、2、0 后包装机的状态"></p><hr><h3 id="【理解】-1"><a href="#【理解】-1" class="headerlink" title="【理解】"></a>【理解】</h3><p>明显的栈模拟问题，需要注意的地方是：如果拿到的是轨道号且轨道不为空时，先判断放入一个会不会满框，如果会满，预先把一个从框中拿出放入流水线，再放轨道号中要放的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> *</span><br><span class="line">n,m,s = <span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split())</span><br><span class="line">depot = []</span><br><span class="line">orb = []</span><br><span class="line">q = deque()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">    ls = <span class="built_in">list</span>(<span class="built_in">input</span>())</span><br><span class="line">    ls = ls[::-<span class="number">1</span>]</span><br><span class="line">    depot.append(ls)</span><br><span class="line">a = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split()))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">trun</span>(<span class="params">q</span>): <span class="comment"># 从栈中拿出来放入流水线</span></span><br><span class="line">    x = q.pop()</span><br><span class="line">    orb.append(x)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    <span class="keyword">if</span> i == -<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(q) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            trun(q)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(depot[i-<span class="number">1</span>]) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(q)+<span class="number">1</span> &gt; s:</span><br><span class="line">            trun(q)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(depot[i-<span class="number">1</span>]) != <span class="number">0</span>:</span><br><span class="line">            q.append(depot[i-<span class="number">1</span>].pop())</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&quot;</span>.join(orb))</span><br></pre></td></tr></table></figure><hr><h2 id="7-10-病毒溯源"><a href="#7-10-病毒溯源" class="headerlink" title="7-10 病毒溯源"></a>7-10 病毒溯源</h2><h3 id="【题目】-2"><a href="#【题目】-2" class="headerlink" title="【题目】"></a>【题目】</h3><p><a href="https://pintia.cn/problem-sets/994805046380707840/problems/1386335159927652361">原题链接</a></p><p><img src="https://images.ptausercontent.com/19836809-3b79-48c6-91d0-e7ff8501b708.JPG" alt="病毒溯源"></p><hr><h3 id="【理解】-2"><a href="#【理解】-2" class="headerlink" title="【理解】"></a>【理解】</h3><p>首先题目不太好理解，需要转化成一颗树来做，然后求最长的一条路径，如果长度不唯一，取最小的那条</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">a = [-<span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10005</span>)]      <span class="comment"># 装的是所有节点的父节点是谁</span></span><br><span class="line">log = []</span><br><span class="line">ans = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">global</span> log</span><br><span class="line">    temp = []</span><br><span class="line">    log = []</span><br><span class="line">    lens = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> x != -<span class="number">1</span>:</span><br><span class="line">        temp.append(x)</span><br><span class="line">        lens += <span class="number">1</span></span><br><span class="line">        x = a[x]</span><br><span class="line">    log = temp[::-<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> lens</span><br><span class="line"></span><br><span class="line">maxs = <span class="number">0</span></span><br><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">    ls = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>().split()))</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,ls[<span class="number">0</span>]+<span class="number">1</span>):</span><br><span class="line">        a[ls[j]] = i</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">    lens = f(i)</span><br><span class="line">    <span class="keyword">if</span> lens &gt; maxs:</span><br><span class="line">        maxs = lens</span><br><span class="line">        ans = log</span><br><span class="line">    <span class="keyword">elif</span> lens == maxs:</span><br><span class="line">        <span class="keyword">if</span> ans &gt; log:</span><br><span class="line">            ans = log</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(maxs)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot; &quot;</span>.join(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">str</span>,ans))))</span><br></pre></td></tr></table></figure><p>经典超时&#x3D;  &#x3D;</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10050</span>];<span class="comment">//a[i] 第i病毒的父下标 </span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; log;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> x)</span></span>; <span class="comment">// 定义函数 </span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,max=<span class="number">0</span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">-1</span>,<span class="built_in">sizeof</span>(a));</span><br><span class="line"><span class="comment">//得父下标 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="type">int</span> k;</span><br><span class="line">cin&gt;&gt;k;</span><br><span class="line"><span class="comment">//k==0叶子 b[]=i; </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;k;j++)&#123;</span><br><span class="line"><span class="type">int</span> son;</span><br><span class="line">cin&gt;&gt;son;</span><br><span class="line">a[son]=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//溯源 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="type">int</span> len=<span class="built_in">f</span>(i);</span><br><span class="line"><span class="keyword">if</span>(len&gt;max)&#123;</span><br><span class="line">max=len;</span><br><span class="line">ans=log;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(len==max)&#123;</span><br><span class="line"><span class="keyword">if</span>(ans&gt;log)&#123;</span><br><span class="line">ans=log;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout&lt;&lt;max&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;ans[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;ans[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//当前节点x </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; temp;</span><br><span class="line">log.<span class="built_in">clear</span>();</span><br><span class="line"><span class="type">int</span> len=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//溯源过程</span></span><br><span class="line"><span class="keyword">while</span>(x!=<span class="number">-1</span>)&#123;</span><br><span class="line">temp.<span class="built_in">push_back</span>(x);</span><br><span class="line">len++;</span><br><span class="line">x=a[x]; <span class="comment">//从下往上遍历 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//反转 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=temp.<span class="built_in">size</span>()<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">log.<span class="built_in">push_back</span>(temp[j]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2022天梯赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 栈 </tag>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB的读写操作(4)</title>
      <link href="/2022/04/13/MongoDB%E7%9A%84%E8%81%9A%E5%90%88%E6%93%8D%E4%BD%9C%EF%BC%885%EF%BC%89/"/>
      <url>/2022/04/13/MongoDB%E7%9A%84%E8%81%9A%E5%90%88%E6%93%8D%E4%BD%9C%EF%BC%885%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="实验5-MongoDB聚合"><a href="#实验5-MongoDB聚合" class="headerlink" title="实验5 MongoDB聚合"></a>实验5 MongoDB聚合</h1><p><a href="https://pan.baidu.com/s/1ZSiMNqgacu_filHhHk7iNw?pwd=vs59">数据集下载</a></p><p><strong>以下操作请使用聚合运算符实现，用到的数据是“emp”集合。</strong></p><p>（1）查询每个职位的人数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.emp.aggregate([</span><br><span class="line">    &#123;&quot;$group&quot; : &#123;&quot;_id&quot; : &quot;$job&quot;,</span><br><span class="line">                &quot;job_people_sum&quot; : &#123;&quot;$sum&quot;:<span class="number">1</span>&#125;&#125;&#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure><p>（2）查询每个职位的总工资</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.emp.aggregate([</span><br><span class="line">    &#123;&quot;$group&quot; : &#123;&quot;_id&quot; : &quot;$job&quot;,</span><br><span class="line">                &quot;job_people_sum&quot; : &#123;&quot;$sum&quot;:<span class="number">1</span>&#125;&#125;&#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure><p>（3）查询每个职位的总工资 ，平均工资</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.emp.aggregate([</span><br><span class="line">    &#123;&quot;$group&quot; : &#123;&quot;_id&quot; : &quot;$job&quot;,</span><br><span class="line">                &quot;job_salary_sum&quot; : &#123;&quot;$sum&quot;:&quot;$salary&quot;&#125;,&quot;job_salary_avg&quot; : &#123;&quot;$avg&quot;:&quot;$salary&quot;&#125;&#125;&#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure><p>（4）查询每个职位的最高工资 ，最低工资</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.emp.aggregate([</span><br><span class="line">    &#123;&quot;$group&quot; : &#123;&quot;_id&quot; : &quot;$job&quot;,</span><br><span class="line">                &quot;job_salary_max&quot; : &#123;&quot;$max&quot;:&quot;$salary&quot;&#125;,&quot;job_salary_min&quot; : &#123;&quot;$min&quot;:&quot;$salary&quot;&#125;&#125;&#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure><p>（5）查询出每个职位的工资数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.emp.aggregate([</span><br><span class="line">    &#123;&quot;$group&quot; : &#123;&quot;_id&quot; : &quot;$job&quot;,</span><br><span class="line">                 &quot;job_salary&quot; : &#123;&quot;$push&quot;:&quot;$salary&quot;&#125;&#125;&#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure><p>（6）查询每个职位的人员</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.emp.aggregate([</span><br><span class="line">    &#123;&quot;$group&quot; : &#123;&quot;_id&quot; : &quot;$job&quot;,</span><br><span class="line">                 &quot;job_name&quot; : &#123;&quot;$push&quot;:&quot;$name&quot;&#125;&#125;&#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure><p>（7）查询每个职位的人员 只保留第一个名称</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.emp.aggregate([</span><br><span class="line">    &#123;&quot;$group&quot; : &#123;&quot;_id&quot; : &quot;$job&quot;,</span><br><span class="line">                 &quot;first_name&quot; : &#123;&quot;$first&quot;:&quot;$name&quot;&#125;&#125;&#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure><p>（8）查询每个职位的人员 只保留最后一个名称</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.emp.aggregate([</span><br><span class="line">    &#123;&quot;$group&quot; : &#123;&quot;_id&quot; : &quot;$job&quot;,</span><br><span class="line">                 &quot;last_name&quot; : &#123;&quot;$last&quot;:&quot;$name&quot;&#125;&#125;&#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure><p>（9）只显示name，job成员，不显示“_id”</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># find做法</span><br><span class="line">db.emp.find(&#123;&#125;,&#123;&quot;_id&quot;:<span class="number">0</span>,&quot;name&quot;:<span class="number">1</span>,&quot;job&quot;:<span class="number">1</span>&#125;)</span><br><span class="line"></span><br><span class="line"># project做法</span><br><span class="line">db.emp.aggregate([</span><br><span class="line">    &#123;&quot;$project&quot;:&#123;&quot;_id&quot;:<span class="number">0</span>,&quot;name&quot;:<span class="number">1</span>,&quot;job&quot;:<span class="number">1</span>&#125;&#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure><p>（10）查询每个人员的年薪，显示name，job和年薪，不显示“_id”（<strong>提示：年薪的计算需要使用$multiply</strong>）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.emp.aggregate([</span><br><span class="line">    &#123;&quot;$match&quot;:&#123;&quot;salary&quot;:&#123;&quot;$gt&quot;:<span class="number">2000</span>&#125;&#125;&#125;,</span><br><span class="line">    &#123;&quot;$project&quot;:&#123;&quot;_id&quot;:<span class="number">0</span>,&quot;name&quot;:<span class="number">1</span>,&quot;job&quot;:<span class="number">1</span>,&quot;salary&quot;:<span class="number">1</span>,&quot;Annual salary&quot;:&#123;&quot;$multiply&quot;:[&quot;$salary&quot;, <span class="number">12</span>]&#125;&#125;&#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure><p>（11）找出工资大于2000的所有雇员姓名、年龄、工资</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.emp.aggregate([</span><br><span class="line">    &#123;&quot;$match&quot;:&#123;&quot;salary&quot;:&#123;&quot;$gt&quot;:<span class="number">2000</span>&#125;&#125;&#125;,</span><br><span class="line">    &#123;&quot;$project&quot;:&#123;&quot;_id&quot;:<span class="number">0</span>,&quot;name&quot;:<span class="number">1</span>,&quot;job&quot;:<span class="number">1</span>,&quot;salary&quot;:<span class="number">1</span>&#125;&#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MongoDB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB的读写操作(3)</title>
      <link href="/2022/04/13/MongoDB%E7%9A%84%E4%BF%AE%E6%94%B9%E6%93%8D%E4%BD%9C%EF%BC%884%EF%BC%89/"/>
      <url>/2022/04/13/MongoDB%E7%9A%84%E4%BF%AE%E6%94%B9%E6%93%8D%E4%BD%9C%EF%BC%884%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="实验4-MongoDB的修改操作"><a href="#实验4-MongoDB的修改操作" class="headerlink" title="实验4 MongoDB的修改操作"></a>实验4 MongoDB的修改操作</h1><p><a href="https://pan.baidu.com/s/15AyeB04U5fj7kKHKdIL0FA?pwd=3czt">数据集下载</a></p><h2 id="1-数据更新（update"><a href="#1-数据更新（update" class="headerlink" title="1 数据更新（update)"></a>1 数据更新（update)</h2><p><strong>运算符：$set（教材P46）、 $inc、 $unset 、$rename</strong></p><p>（1）将年龄是19岁的人成绩都更新为100分</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.updateMany(&#123;&quot;age&quot;:<span class="number">19</span>&#125;,&#123;&quot;$set&quot;:&#123;&quot;score&quot;:<span class="number">100</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><p>（2）将所有年龄是20岁的人的成绩修改为99分</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.updateMany(&#123;&quot;age&quot;:<span class="number">20</span>&#125;,&#123;&quot;$set&quot;:&#123;&quot;score&quot;:<span class="number">99</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><p>（3）将所有年龄为19岁的成绩一律减少30分，年龄减小1岁</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.updateMany(&#123;&quot;age&quot;:<span class="number">20</span>&#125;,&#123;&quot;$inc&quot;:&#123;&quot;score&quot;:<span class="number">-30</span>,&quot;age&quot;:<span class="number">-1</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><p><strong>（4）删除“张三”的年龄与成绩信息</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.updateMany(&#123;&quot;name&quot;:&quot;张三&quot;&#125;,&#123;&quot;$upset&quot;: &#123;&quot;age&quot;: <span class="number">1</span>,&quot;score&quot;: <span class="number">1</span>,&quot;course&quot;: <span class="number">1</span>&#125;)</span><br></pre></td></tr></table></figure><p>（5）将年龄是30岁的人姓名更新为“不存在” </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.update(&#123;&quot;age&quot;:<span class="number">30</span>&#125;,&#123;&quot;$set&quot;:&#123;&quot;name&quot;:&quot;不存在&quot;&#125;&#125;,<span class="literal">true</span>,<span class="literal">false</span>)</span><br></pre></td></tr></table></figure><p>（6）将“张三”name成员名称修改为“姓名”</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.update(&#123;&quot;name&quot;:&quot;张三&quot;&#125;,&#123;&quot;$rename&quot;:&#123;&quot;name&quot;:&quot;姓名&quot;&#125;&#125;,<span class="literal">false</span>,<span class="literal">false</span>)</span><br></pre></td></tr></table></figure><p>运算符：**$push、$addToSet、$pop、$pull、$pullAll**</p><p>（7）向“谷大神-E”里面的课程追加一个“美术”</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.update(&#123;&quot;name&quot;:&quot;谷大神-E&quot;&#125;,&#123;&quot;$push&quot;:&#123;&quot;course&quot;:&quot;美术&quot;&#125;&#125;)</span><br></pre></td></tr></table></figure><p>（8）向“王五”的信息里面添加多个课程内容：美术、音乐、体育</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.update(&#123;&quot;name&quot;:&quot;王五&quot;&#125;,&#123;&quot;$push&quot;:&#123;&quot;course&quot;:&#123;&quot;$each&quot;:[&quot;美术&quot;,&quot;音乐&quot;,&quot;体育&quot;]&#125;&#125;&#125;)</span><br></pre></td></tr></table></figure><p>（9）向“王五”的信息添加新的内容：course为舞蹈</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.students.update(&#123;&quot;name&quot;:&quot;王五&quot;&#125;,&#123;&quot;$push&quot;:&#123;&quot;course&quot;:&quot;舞蹈&quot;&#125;&#125;)</span><br><span class="line"></span><br><span class="line"># 同为添加 addToSet 但是可以去重</span><br><span class="line">db.students.update(&#123;&quot;name&quot;:&quot;王五&quot;&#125;,&#123;&quot;$addToSet&quot;:&#123;&quot;course&quot;:&quot;舞蹈&quot;&#125;&#125;)</span><br></pre></td></tr></table></figure><p>（10）删除“王五”的第一个课程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.update(&#123;&quot;name&quot;:&quot;王五&quot;&#125;,&#123;&quot;$pop&quot;:&#123;&quot;course&quot;:<span class="number">-1</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><p>（11）删除“王五”的最后一个课程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.update(&#123;&quot;name&quot;:&quot;王五&quot;&#125;,&#123;&quot;$pop&quot;:&#123;&quot;course&quot;:<span class="number">1</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><p>（12）删除“王五”的音乐课程信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.update(&#123;&quot;name&quot;:&quot;王五&quot;&#125;,&#123;&quot;$push&quot;:&#123;&quot;course&quot;:&quot;音乐&quot;&#125;&#125;)</span><br></pre></td></tr></table></figure><p>（13）删除“漓江-C”的“语文”和“数学”两门课程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.update(&#123;&quot;name&quot;:&quot;漓江-C&quot;&#125;,&#123;&quot;$pullAll&quot;:&#123;&quot;course&quot;:[&quot;语文&quot;,&quot;数学&quot;]]&#125;&#125;)</span><br></pre></td></tr></table></figure><h2 id="2-数据删除（delete）"><a href="#2-数据删除（delete）" class="headerlink" title="2 数据删除（delete）"></a>2 数据删除（delete）</h2><p>正则复习</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.students.find(&#123;&quot;name&quot;: <span class="operator">/</span>漓江<span class="operator">/</span>&#125;)                                # 简洁</span><br><span class="line">db.students.find(&#123;&quot;name&quot;:&#123;&quot;$regex&quot;: <span class="operator">/</span>漓江<span class="operator">/</span>,&quot;$options&quot;:&quot;m&quot;&#125;&#125;)        # 详细</span><br></pre></td></tr></table></figure><p>（1）删除所有姓名里面带“谷”的信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.deleteMany(&#123;&quot;name&quot;:<span class="operator">/</span>谷<span class="operator">/</span>&#125;)</span><br></pre></td></tr></table></figure><p>（2）删除姓名带“漓江”的信息，要求只删除一个</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.deldteOne(&#123;&quot;name&quot;:&#123;&quot;regex&quot;:<span class="operator">/</span>漓江<span class="operator">/</span>,&quot;$options&quot;:&quot;m&quot;&#125;&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MongoDB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB的读写操作(2)</title>
      <link href="/2022/04/13/MongoDB%E7%9A%84%E8%AF%BB%E5%86%99%E6%93%8D%E4%BD%9C%EF%BC%882%EF%BC%89/"/>
      <url>/2022/04/13/MongoDB%E7%9A%84%E8%AF%BB%E5%86%99%E6%93%8D%E4%BD%9C%EF%BC%882%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="MongoDB的读写操作（2）"><a href="#MongoDB的读写操作（2）" class="headerlink" title="MongoDB的读写操作（2）"></a>MongoDB的读写操作（2）</h1><p><a href="https://pan.baidu.com/s/15AyeB04U5fj7kKHKdIL0FA?pwd=3czt">数据集下载</a></p><h2 id="运算符：与-and-、或（-or）、非-not、-nor"><a href="#运算符：与-and-、或（-or）、非-not、-nor" class="headerlink" title="运算符：与($and)、或（$or）、非($not、$nor)"></a>运算符：与($and)、或（$or）、非($not、$nor)</h2><p><strong>（用法可参考教材P156）</strong></p><p>（1）查询年龄在19-20岁的学生信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.students.find(&#123;&quot;$and&quot;:[&#123;&quot;age&quot;:&#123;&quot;$gte&quot;:<span class="number">19</span>&#125;&#125;,&#123;&quot;age&quot;:&#123;&quot;$lte&quot;:<span class="number">20</span>&#125;&#125;]&#125;)        <span class="operator">/</span><span class="operator">/</span>显式表示</span><br><span class="line"></span><br><span class="line">db.students.find(&#123;&quot;age&quot;:&#123;&quot;$gte&quot;:<span class="number">19</span>&#125;,&quot;age&quot;:&#123;&quot;$lte&quot;:<span class="number">20</span>&#125;&#125;)                        <span class="operator">/</span><span class="operator">/</span>隐式表示</span><br></pre></td></tr></table></figure><p>（2）查询年龄大于19岁，或者成绩大于90分的学生信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.find(&#123;&quot;$or&quot;:[&#123;&quot;age&quot;:&#123;&quot;$gt&quot;:<span class="number">19</span>&#125;&#125;,&#123;&quot;score&quot;: &#123;&quot;$gt&quot;:<span class="number">90</span>&#125;&#125;]&#125;)</span><br></pre></td></tr></table></figure><p>（3）查询年龄小于等于19岁，并且成绩小于等于90分的学生信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.find(&#123;&quot;$and&quot;:[&#123;&quot;age&quot;:&#123;&quot;$lte&quot;:<span class="number">19</span>&#125;&#125;,&#123;&quot;score&quot;: &#123;&quot;$lte&quot;:<span class="number">90</span>&#125;&#125;]&#125;)</span><br></pre></td></tr></table></figure><h2 id="运算符：-in-和-nin"><a href="#运算符：-in-和-nin" class="headerlink" title="运算符：$in 和 $nin"></a>运算符：$in 和 $nin</h2><p>（4）查询姓名是“张三”、“李四”、“王五”的信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.find(&#123;&quot;name&quot;:&#123;&quot;$in&quot;:[&quot;张三&quot;,&quot;李四&quot;,&quot;王五&quot;]&#125;&#125;)</span><br></pre></td></tr></table></figure><p>（5）查询姓名不是“张三”、“李四”、“王五”的信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.find(&#123;&quot;name&quot;:&#123;&quot;$nin&quot;:[&quot;张三&quot;,&quot;李四&quot;,&quot;王五&quot;]&#125;&#125;)</span><br></pre></td></tr></table></figure><h2 id="模糊查询：通过正则表达式实现"><a href="#模糊查询：通过正则表达式实现" class="headerlink" title="模糊查询：通过正则表达式实现"></a>模糊查询：通过正则表达式实现</h2><p>（6）查询姓名带谷字的同学信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.find(&#123;&quot;name&quot;:<span class="operator">/</span>谷<span class="operator">/</span>&#125;)</span><br></pre></td></tr></table></figure><p>（7）查询姓名含有字符A或者a的同学信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.find(&#123;&quot;name&quot;:<span class="operator">/</span>a<span class="operator">/</span>i&#125;)</span><br></pre></td></tr></table></figure><p>（8）按照成绩进行升序排序</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.find().sort(&#123;&quot;score&quot;:<span class="number">1</span>&#125;)</span><br></pre></td></tr></table></figure><p>（9）按成绩降序排序，只显示第一页的5条数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.find().sort(&#123;&quot;score&quot;:<span class="number">-1</span>&#125;).limit(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p><strong>（10）按成绩降序排序，5条数据一页，要求只显示第二页的数据</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.find().sort(&#123;&quot;score&quot;:<span class="number">-1</span>&#125;).<span class="keyword">skip</span>(<span class="number">5</span>).limit(<span class="number">5</span>)    <span class="operator">/</span><span class="operator">/</span><span class="keyword">skip</span>(<span class="number">5</span>)跳过五条数据</span><br></pre></td></tr></table></figure><h2 id="运算符：-all、-size、-slice、-elemMatch"><a href="#运算符：-all、-size、-slice、-elemMatch" class="headerlink" title="运算符：$all、$size、$slice、$elemMatch"></a>运算符：$all、$size、$slice、$elemMatch</h2><p><strong>（用法可参考教材P167-172）</strong></p><p>（11）查询同时参加语文和数学课程的学生</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.students.find(&#123;&quot;$and&quot;:[&#123;&quot;course&quot;:&quot;语文&quot;&#125;,&#123;&quot;course&quot;:&quot;数学&quot;&#125;]&#125;)</span><br><span class="line"></span><br><span class="line">db.students.find(&#123;&quot;course&quot;:&#123;&quot;$all&quot;:[&quot;语文&quot;,&quot;数学&quot;]&#125;&#125;)</span><br></pre></td></tr></table></figure><p>（12）查询数组中第二个内容为数学的信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.find(&#123;&quot;course.1&quot;:&quot;数学&quot;&#125;)</span><br></pre></td></tr></table></figure><p>（13）查询只参加两门课的学生</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.find(&#123;&quot;course&quot;:&#123;&quot;$size&quot;:<span class="number">2</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><p>**（14）返回年龄为19岁所有学生的信息，但是要求只显示两门参加课程 **</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.find(&#123;&quot;age&quot;:<span class="number">19</span>&#125;,&#123;&quot;course&quot;:&#123;&quot;$slice&quot;:<span class="number">2</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><p><strong>（15）查询出年龄大于等于19岁，父母有人是局长的学生信息</strong> </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.find(&#123;&quot;age&quot;:&#123;&quot;$gt&quot;:<span class="number">19</span>&#125;,&quot;parents&quot;:&#123;&quot;$elemMatch&quot;:&#123;&quot;job&quot;:&quot;局长&quot;&#125;&#125;&#125;)</span><br></pre></td></tr></table></figure><h2 id="运算符：-exists-判断某个字段是否存在，如果设置为true表示存在"><a href="#运算符：-exists-判断某个字段是否存在，如果设置为true表示存在" class="headerlink" title="运算符：$exists 判断某个字段是否存在，如果设置为true表示存在"></a>运算符：$exists 判断某个字段是否存在，如果设置为true表示存在</h2><p>（16）查询具有parents成员的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.find(&#123;&quot;parents&quot;:&#123;&quot;$exists&quot;: <span class="literal">true</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><p>（17）查询不具有course成员的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.find(&#123;&quot;course&quot;:&#123;&quot;$exists&quot;: <span class="literal">false</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><p><strong>下期预告</strong></p><p>删除修改，python结合巩固</p>]]></content>
      
      
      <categories>
          
          <category> MongoDB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB的读写操作(1)</title>
      <link href="/2022/04/13/MongoDB%E7%9A%84%E8%AF%BB%E5%86%99%E6%93%8D%E4%BD%9C%EF%BC%881%EF%BC%89/"/>
      <url>/2022/04/13/MongoDB%E7%9A%84%E8%AF%BB%E5%86%99%E6%93%8D%E4%BD%9C%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="实验2-MongoDB的读写操作（1）"><a href="#实验2-MongoDB的读写操作（1）" class="headerlink" title="实验2 MongoDB的读写操作（1）"></a>实验2 MongoDB的读写操作（1）</h1><p><a href="https://pan.baidu.com/s/15AyeB04U5fj7kKHKdIL0FA?pwd=3czt">数据集下载</a></p><h2 id="1-数据增加"><a href="#1-数据增加" class="headerlink" title="1 数据增加"></a>1 数据增加</h2><p>（1）在infos集合中增加一条url为 <a href="http://www.ljc.cn/">www.ljc.cn</a> 的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.infos.insert(&#123;&quot;url&quot;:&quot;www.ljc.cn&quot;&#125;)</span><br></pre></td></tr></table></figure><p>（2）在infos集合中增加数组数据，数组有两个url分别为 <a href="http://www.ljc.cn和www.ljclg.cn的数据/">www.ljc.cn和www.ljclg.cn的数据</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.infos.insert(&#123;&quot;url&quot;:[&quot;www.ljc.cn&quot;,&quot;www.ljclg.cn&quot;]&#125;)</span><br></pre></td></tr></table></figure><p>（3）在infos集合中增加10000个url分别为 ljc-1、ljc-2、ljc-3……的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(var i<span class="operator">=</span><span class="number">1</span>; i<span class="operator">&lt;=</span><span class="number">10000</span>; i<span class="operator">+</span><span class="operator">+</span>)&#123;</span><br><span class="line">db.infos.insert(&#123;&quot;url&quot;:&quot;ljc-&quot;<span class="operator">+</span>i&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-数据查询"><a href="#2-数据查询" class="headerlink" title="2 数据查询"></a>2 数据查询</h2><p>（1）查出集合infos中的所有数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.infos.find()</span><br></pre></td></tr></table></figure><p>（2）查出url为 <a href="http://www.ljc.cn的数据/">www.ljc.cn的数据</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.infos.find(&#123;&quot;url&quot;:&quot;www.ljc.cn&quot;&#125;)</span><br></pre></td></tr></table></figure><p>（3）查出url为 <a href="http://www.ljc.cn的数据,但不显示“_id”/">www.ljc.cn的数据，但不显示“_id”</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.infos.find(&#123;&quot;url&quot;:&quot;www.ljc.cn&quot;&#125;,&#123;&quot;_id&quot;:<span class="number">0</span>&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>数据：</p><p>db.students.insert({“name”:”张三”,”sex”:”男”,”age”:19,”score”:89,”address”:”海淀区”})</p><p>db.students.insert({“name”:”李四”,”sex”:”女”,”age”:20,”score”:59,”address”:”朝阳区”})</p><p>db.students.insert({“name”:”王五”,”sex”:”女”,”age”:19,”score”:99,”address”:”西城区”})</p><p>db.students.insert({“name”:”赵六”,”sex”:”男”,”age”:20,”score”:100,”address”:”东城区”})</p><p>db.students.insert({“name”:”孙七”,”sex”:”男”,”age”:19,”score”:20,”address”:”海淀区”})</p><p>db.students.insert({“name”:”王八”,”sex”:”女”,”age”:21,”score”:0,”address”:”三里屯”})</p><p>db.students.insert({“name”:”刘九”,”sex”:”男”,”age”:19,”score”:70,”address”:”朝阳区”})</p><p>db.students.insert({“name”:”钱十”,”sex”:”女”,”age”:21,”score”:56,”address”:”西城区”})</p></blockquote><p> <strong>运算符： 大于($gt)、小于($lt)、大于等于($gte)、小于等于($lte)、不等于($ne)、</strong></p><p><strong>等于（key : value的形式）</strong></p><p>（4）查询姓名是张三的学生信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.find(&#123;&quot;name&quot;:&quot;张三&quot;&#125;)</span><br></pre></td></tr></table></figure><p>（5）查询性别是男的学生信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.find(&#123;&quot;sex&quot;:&quot;男&quot;&#125;)</span><br></pre></td></tr></table></figure><p>（6）查询年龄大于19岁的学生</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.find(&#123;&quot;age&quot;:&#123;&quot;$gt&quot;:<span class="number">19</span>&#125;&#125;) </span><br></pre></td></tr></table></figure><p>（7）查询成绩大于60分的学生</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.find(&#123;&quot;score&quot;:&#123;&quot;$gt&quot;:<span class="number">60</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><p>（8）查询姓名不是王五的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.students.find(&#123;&quot;name&quot;:&#123;&quot;$in&quot;:&quot;王五&quot;&#125;&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MongoDB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
